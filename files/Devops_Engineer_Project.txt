Fortinet Technologies (Canada) Inc.
Development/DevOps Engineer Remote Test
Version: 1.08
Last Updated: June 29th, 2021 

This project exercises some of the skill sets and thought processes used daily
in our teams. The intention is to evaluate the candidate's current background,
compared to what is required on the job.

* Introduction

VirusTotal is a free online service that runs multiple antivirus engines and
website scanners to analyze files and URLs. The general public and regular end
users may submit files or URLs for scanning using the online portal at
www.virustotal.com. The web portal also allows users to search for previously
submitted files or URLs.

VirusTotal offers a free public API that lets you build simple scripts to
access the information generated by VirusTotal. More information about
VirusTotal's public API is here:
 
    https://www.virustotal.com/en/documentation/public-api/

* Project Assignment

In this exercise, we want to build a website that allows users to upload a text
file as a list of hashes (MD5 or Sha256) and generate a simple report using
data provided by querying VirusTotal's public API for the scan report of the hashes. 
 
The report should show the following information in a HTML table format:
 
hash_value (MD5 or Sha256)  | Fortinet detection name | Number of engines detected | Scan Date |

An vendor's detection name is the value of the key 'result' in json response from VirusTotal for that vendor.
A vendor is considered having detection for a sample if the detection name is not NULL.

An example of input hash file is provided (sample_hash_input.txt). It is a list of 100 MD5 sums of a set of malware files.

One may start with a command line interface version, before building the web interface. 

Bonus
	- Containerize the application
	- Set up a demo system accessible from Internet using some cloud service like AWS.

Give some thoughts on the following:
    - The input list could be very large. So users may not be able to wait for
      the queries to complete, and as such, could not see the report right away.
      Consider how to let users come back later to see the report.

    - Many people might use the website frequently over time. The same hash can
      be queried multiple times. Consider how to store VirusTotal's results
      locally so that the website does not need to query the same hash again
      from VirusTotal if the scan date is less than 1 day ago.

Notes:
    - Linux is a preferred platform and Python is a preferred language for this project.
    - Do not try to download the malware itself.
	- Do not share this project to anyone else.
	
* Submission Guidelines

Create a free account on gitlab.com and a private repository for this project. 
Add ftgd_screening as a project developer.

Include a README plain text document with the project, summarising:
	- clear instructions on how to run the project
	- a short video or presentation with screenshots of the project result if a demo is not available.
    - a general summary of the project files or code layout
    - technology stack used (Linux, Python, MySQL, Apache, etc.)
    - required dependencies not normally installed on the system (or with the base technology stack above)
	- some screenshots of the application, if there is no public demo
    - issues encountered, and how you addressed them
	- any assumptions